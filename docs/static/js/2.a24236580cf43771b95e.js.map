{"version":3,"sources":["webpack:///static/js/2.a24236580cf43771b95e.js","webpack:///./src/pages/game/skyBox/main.ts","webpack:///./~/three/examples/js/controls/DeviceOrientationControls.js?11fe*","webpack:///./~/three/examples/js/controls/OrbitControls.js?df0e*","webpack:///./~/three/examples/js/libs/stats.min.js?9b50*"],"names":["webpackJsonp","28","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_three__","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__","n","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default","__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__","__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__","App","this","renderer","antialias","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","stats","a","gameArea","document","querySelector","appendChild","domElement","dom","addEventListener","loadImage","bind","scene","camera","position","x","y","z","controls","disableDefaultDrag","initLight","initObject","enterFrame","prototype","e","preventDefault","cubeTexture","fileList","dataTransfer","files","length","arr","i","name","split","URL","createObjectURL","load","url","background","ambLight","add","dirLight","set","requestAnimationFrame","update","render","NUM","SCREEN_WIDTH","documentElement","clientWidth","SCREEN_HEIGHT","clientHeight","31","exports","THREE","DeviceOrientationControls","object","scope","rotation","reorder","enabled","deviceOrientation","screenOrientation","alpha","alphaOffsetAngle","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","zee","Vector3","euler","Euler","q0","Quaternion","q1","Math","sqrt","quaternion","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","degToRad","updateAlphaOffsetAngle","angle","dispose","32","OrbitControls","getAutoRotationAngle","PI","autoRotateSpeed","getZoomScale","pow","zoomSpeed","rotateLeft","sphericalDelta","theta","rotateUp","phi","dollyIn","dollyScale","PerspectiveCamera","scale","OrthographicCamera","zoom","max","minZoom","min","maxZoom","updateProjectionMatrix","zoomChanged","console","warn","enableZoom","dollyOut","handleMouseDownRotate","rotateStart","clientX","clientY","handleMouseDownDolly","dollyStart","handleMouseDownPan","panStart","handleMouseMoveRotate","rotateEnd","rotateDelta","subVectors","element","body","rotateSpeed","copy","handleMouseMoveDolly","dollyEnd","dollyDelta","handleMouseMovePan","panEnd","panDelta","pan","handleMouseUp","handleMouseWheel","deltaY","handleKeyDown","keyCode","keys","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDolly","dx","dy","distance","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleTouchEnd","onMouseDown","button","mouseButtons","ORBIT","enableRotate","state","STATE","ROTATE","ZOOM","DOLLY","PAN","enablePan","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","endEvent","onMouseWheel","stopPropagation","onKeyDown","enableKeys","onTouchStart","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","onTouchMove","onTouchEnd","onContextMenu","undefined","target","minDistance","maxDistance","Infinity","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","autoRotate","MOUSE","MIDDLE","target0","clone","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","reset","changeEvent","offset","quat","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","makeSafe","radius","panOffset","setFromSpherical","lookAt","distanceToSquared","EPS","dot","type","Spherical","Vector2","panLeft","v","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","deltaX","targetDistance","tan","fov","matrix","right","left","top","bottom","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","33","Stats","h","c","k","d","children","style","display","l","createElement","cssText","g","performance","Date","now","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","end","usedJSHeapSize","jsHeapSizeLimit","setMode","round","u","m","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","drawImage"],"mappings":"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","file":"static/js/2.a24236580cf43771b95e.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 28:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__);\n\r\n\r\n\r\n\r\nvar App = (function () {\r\n    function App() {\r\n        this.renderer = new __WEBPACK_IMPORTED_MODULE_0_three__[\"WebGLRenderer\"]({ antialias: true });\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.stats = new __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default.a();\r\n        this.gameArea = document.querySelector('.game-area');\r\n        if (this.gameArea) {\r\n            this.gameArea.appendChild(this.renderer.domElement);\r\n            this.gameArea.appendChild(this.stats.dom);\r\n        }\r\n        this.gameArea.addEventListener('drop', this.loadImage.bind(this));\r\n        this.scene = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Scene\"]();\r\n        this.camera = new __WEBPACK_IMPORTED_MODULE_0_three__[\"PerspectiveCamera\"](75, window.innerWidth / window.innerHeight, 1, 10000);\r\n        this.camera.position.x = 100;\r\n        this.camera.position.y = 100;\r\n        this.camera.position.z = 100;\r\n        this.controls = new __WEBPACK_IMPORTED_MODULE_0_three__[\"OrbitControls\"](this.camera, this.gameArea);\r\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\r\n        this.disableDefaultDrag();\r\n        this.initLight();\r\n        this.initObject();\r\n        this.enterFrame();\r\n    }\r\n    App.prototype.loadImage = function (e) {\r\n        e.preventDefault();\r\n        var fileList = e.dataTransfer.files;\r\n        var cubeTexture;\r\n        if (fileList.length === 6) {\r\n            var arr = [];\r\n            for (var i = 0; i < fileList.length; i++) {\r\n                switch (fileList[i].name.split('.')[0]) {\r\n                    case 'left':\r\n                        arr[0] = window.URL.createObjectURL(fileList[i]);\r\n                        break;\r\n                    case 'right':\r\n                        arr[1] = window.URL.createObjectURL(fileList[i]);\r\n                        break;\r\n                    case 'top':\r\n                        arr[2] = window.URL.createObjectURL(fileList[i]);\r\n                        break;\r\n                    case 'bottom':\r\n                        arr[3] = window.URL.createObjectURL(fileList[i]);\r\n                        break;\r\n                    case 'front':\r\n                        arr[4] = window.URL.createObjectURL(fileList[i]);\r\n                        break;\r\n                    case 'back':\r\n                        arr[5] = window.URL.createObjectURL(fileList[i]);\r\n                        break;\r\n                }\r\n            }\r\n            cubeTexture = new __WEBPACK_IMPORTED_MODULE_0_three__[\"CubeTextureLoader\"]()\r\n                .load(arr);\r\n        }\r\n        else {\r\n            var url = window.URL.createObjectURL(fileList[0]);\r\n            cubeTexture = new __WEBPACK_IMPORTED_MODULE_0_three__[\"CubeTextureLoader\"]()\r\n                .load([url, url, url, url, url, url]);\r\n        }\r\n        this.scene.background = cubeTexture;\r\n    };\r\n    App.prototype.disableDefaultDrag = function () {\r\n        document.addEventListener('dragleave', function (e) { return e.preventDefault(); }); //拖离\r\n        document.addEventListener('drop', function (e) { return e.preventDefault(); }); //拖后放\r\n        document.addEventListener('dragenter', function (e) { return e.preventDefault(); }); //拖进\r\n        document.addEventListener('dragover', function (e) { return e.preventDefault(); }); //拖来拖去\r\n    };\r\n    App.prototype.initLight = function () {\r\n        this.ambLight = new __WEBPACK_IMPORTED_MODULE_0_three__[\"AmbientLight\"](0x000000);\r\n        this.scene.add(this.ambLight);\r\n        this.dirLight = new __WEBPACK_IMPORTED_MODULE_0_three__[\"DirectionalLight\"](0xffffff, 1);\r\n        this.dirLight.position.set(0.5, 1, 0.2);\r\n        this.scene.add(this.dirLight);\r\n    };\r\n    App.prototype.initObject = function () {\r\n    };\r\n    App.prototype.enterFrame = function () {\r\n        requestAnimationFrame(this.enterFrame.bind(this));\r\n        this.controls.update();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.stats.update();\r\n    };\r\n    App.NUM = 20;\r\n    App.SCREEN_WIDTH = document.documentElement.clientWidth;\r\n    App.SCREEN_HEIGHT = document.documentElement.clientHeight;\r\n    return App;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\r\n\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports) {\n\n/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports) {\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports) {\n\n// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.a24236580cf43771b95e.js","import * as THREE from 'three'\nimport Stats from 'three/examples/js/libs/stats.min'\nimport 'three/examples/js/controls/OrbitControls'\nimport 'three/examples/js/controls/DeviceOrientationControls'\nimport dat from 'dat-gui'\n\nclass App{\n    private static NUM = 20\n    private static SCREEN_WIDTH = document.documentElement.clientWidth\n    private static SCREEN_HEIGHT = document.documentElement.clientHeight\n\n    private gameArea: HTMLElement\n    private renderer: THREE.WebGLRenderer\n    private scene: THREE.Scene\n    private camera: THREE.PerspectiveCamera\n    private controls: THREE.OrbitControls | THREE.DeviceOrientationControls\n\n    private stats: Stats\n\n    private ambLight: THREE.AmbientLight\n    private dirLight: THREE.DirectionalLight\n\n    constructor () {\n        this.renderer = new THREE.WebGLRenderer({antialias: true})\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.stats = new Stats();\n        this.gameArea = <HTMLElement>document.querySelector('.game-area')\n        if(this.gameArea) {\n            this.gameArea.appendChild(this.renderer.domElement)\n            this.gameArea.appendChild(this.stats.dom);\n        }\n\n        this.gameArea.addEventListener('drop', this.loadImage.bind(this))\n        \n        this.scene = new THREE.Scene()\n\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.x = 100\n        this.camera.position.y = 100\n        this.camera.position.z = 100\n        this.controls = new THREE.OrbitControls( this.camera, this.gameArea );\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\n\n        this.disableDefaultDrag()\n        this.initLight()\n        this.initObject()\n        this.enterFrame()\n        \n    }\n    loadImage(e){\n        e.preventDefault();\n        var fileList = e.dataTransfer.files;\n        let cubeTexture\n        if (fileList.length === 6) {\n            let arr: string[] = []\n            for(let i=0;i<fileList.length;i++){\n                switch(fileList[i].name.split('.')[0]){\n                    case 'left':\n                        arr[0] = window.URL.createObjectURL(fileList[i])\n                    break;\n                    case 'right':\n                        arr[1] = window.URL.createObjectURL(fileList[i])\n                    break;\n                    case 'top':\n                        arr[2] = window.URL.createObjectURL(fileList[i])\n                    break;\n                    case 'bottom':\n                        arr[3] = window.URL.createObjectURL(fileList[i])\n                    break;\n                    case 'front':\n                        arr[4] = window.URL.createObjectURL(fileList[i])\n                    break;\n                    case 'back':\n                        arr[5] = window.URL.createObjectURL(fileList[i])\n                    break;\n                }\n            }\n            cubeTexture = new THREE.CubeTextureLoader()\n\t\t\t\t\t.load( arr );\n        } else {\n            let url = window.URL.createObjectURL(fileList[0])\n            cubeTexture = new THREE.CubeTextureLoader()\n\t\t\t\t\t.load( [ url,url,url,url,url,url ] );\n        }\n        this.scene.background = cubeTexture\n    }\n\n    disableDefaultDrag(){\n        document.addEventListener('dragleave', e => e.preventDefault()) //拖离\n        document.addEventListener('drop', e => e.preventDefault()) //拖后放\n        document.addEventListener('dragenter', e => e.preventDefault()) //拖进\n        document.addEventListener('dragover', e => e.preventDefault()) //拖来拖去\n    }\n\n    initLight() {\n        this.ambLight = new THREE.AmbientLight(0x000000);\n        this.scene.add( this.ambLight );\n\n        this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\n        this.dirLight.position.set(0.5, 1, 0.2);\n        this.scene.add(this.dirLight);\n    }\n    \n    initObject () {\n        \n    }\n\n    enterFrame () {\n        requestAnimationFrame(this.enterFrame.bind(this));\n\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera )\n        this.stats.update();\n    }\n}\n\nexport default App\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/skyBox/main.ts","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/DeviceOrientationControls.js\n// module id = 31\n// module chunks = 0 1 2 3","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/OrbitControls.js\n// module id = 32\n// module chunks = 0 1 2 3","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/libs/stats.min.js\n// module id = 33\n// module chunks = 0 1 2 3"],"sourceRoot":""}