{"version":3,"sources":["webpack:///static/js/1.e65d5dac8d14f58e5836.js","webpack:///./src/pages/game/baseBox/main.ts","webpack:///./~/three/examples/js/controls/DeviceOrientationControls.js?11fe","webpack:///./~/three/examples/js/controls/OrbitControls.js?df0e","webpack:///./~/three/examples/js/libs/stats.min.js?9b50"],"names":["webpackJsonp","22","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_three__","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__","n","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default","__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__","__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__","__WEBPACK_IMPORTED_MODULE_4_dat_gui__","__WEBPACK_IMPORTED_MODULE_4_dat_gui___default","App","this","renderer","antialias","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","stats","a","gameArea","document","querySelector","appendChild","domElement","dom","scene","camera","position","z","controls","initLight","initObject","enterFrame","initGUI","prototype","_this","myjson","preset","remembered","Default","0","width","heigth","depth","color","red","closed","folders","大小","颜色","config","FizzyText","gui","GUI","autoPlace","load","parentElement","style","cssText","folder1","addFolder","add","step","onChange","box","scale","x","y","addColor","material","remember","revert","ambLight","planeGeo","planeMat","wireframe","plane","rotateX","Math","PI","boxGeo","boxMat","set","requestAnimationFrame","bind","update","render","NUM","SCREEN_WIDTH","documentElement","clientWidth","SCREEN_HEIGHT","clientHeight","29","exports","THREE","DeviceOrientationControls","object","scope","rotation","reorder","enabled","deviceOrientation","screenOrientation","alpha","alphaOffsetAngle","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","zee","Vector3","euler","Euler","q0","Quaternion","q1","sqrt","quaternion","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","addEventListener","disconnect","removeEventListener","degToRad","updateAlphaOffsetAngle","angle","dispose","30","OrbitControls","getAutoRotationAngle","autoRotateSpeed","getZoomScale","pow","zoomSpeed","rotateLeft","sphericalDelta","theta","rotateUp","phi","dollyIn","dollyScale","PerspectiveCamera","OrthographicCamera","zoom","max","minZoom","min","maxZoom","updateProjectionMatrix","zoomChanged","console","warn","enableZoom","dollyOut","handleMouseDownRotate","rotateStart","clientX","clientY","handleMouseDownDolly","dollyStart","handleMouseDownPan","panStart","handleMouseMoveRotate","rotateEnd","rotateDelta","subVectors","element","body","rotateSpeed","copy","handleMouseMoveDolly","dollyEnd","dollyDelta","handleMouseMovePan","panEnd","panDelta","pan","handleMouseUp","handleMouseWheel","deltaY","handleKeyDown","keyCode","keys","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDolly","dx","dy","distance","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleTouchEnd","onMouseDown","preventDefault","button","mouseButtons","ORBIT","enableRotate","state","STATE","ROTATE","ZOOM","DOLLY","PAN","enablePan","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","endEvent","onMouseWheel","stopPropagation","onKeyDown","enableKeys","onTouchStart","length","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","onTouchMove","onTouchEnd","onContextMenu","undefined","target","minDistance","maxDistance","Infinity","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","autoRotate","MOUSE","MIDDLE","target0","clone","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","reset","changeEvent","offset","quat","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","makeSafe","radius","panOffset","setFromSpherical","lookAt","distanceToSquared","EPS","dot","type","Spherical","Vector2","panLeft","v","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","deltaX","targetDistance","tan","fov","matrix","right","left","top","bottom","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","31","Stats","h","c","k","d","children","display","l","createElement","g","performance","Date","now","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","end","usedJSHeapSize","jsHeapSizeLimit","setMode","round","u","m","p","q","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","drawImage"],"mappings":"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","file":"static/js/1.e65d5dac8d14f58e5836.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 22:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_dat_gui__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_dat_gui___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_dat_gui__);\n\r\n\r\n\r\n\r\n\r\nvar App = (function () {\r\n    function App() {\r\n        this.renderer = new __WEBPACK_IMPORTED_MODULE_0_three__[\"WebGLRenderer\"]({ antialias: true });\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.stats = new __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default.a();\r\n        this.gameArea = document.querySelector('.game-area');\r\n        if (this.gameArea) {\r\n            this.gameArea.appendChild(this.renderer.domElement);\r\n            this.gameArea.appendChild(this.stats.dom);\r\n        }\r\n        this.scene = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Scene\"]();\r\n        this.camera = new __WEBPACK_IMPORTED_MODULE_0_three__[\"PerspectiveCamera\"](75, window.innerWidth / window.innerHeight, 1, 10000);\r\n        this.camera.position.z = 10;\r\n        this.controls = new __WEBPACK_IMPORTED_MODULE_0_three__[\"OrbitControls\"](this.camera, this.gameArea);\r\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\r\n        this.initLight();\r\n        this.initObject();\r\n        this.enterFrame();\r\n        this.initGUI();\r\n    }\r\n    App.prototype.initGUI = function () {\r\n        var _this = this;\r\n        var myjson = {\r\n            \"preset\": \"Default\",\r\n            \"remembered\": {\r\n                \"Default\": {\r\n                    \"0\": {\r\n                        \"width\": 6.1000000000000005,\r\n                        \"heigth\": 6.9958642081681885,\r\n                        \"depth\": 7.095123212131656,\r\n                        \"color\": 65535\r\n                    }\r\n                },\r\n                \"red\": {\r\n                    \"0\": {\r\n                        \"width\": 10,\r\n                        \"heigth\": 10,\r\n                        \"depth\": 10,\r\n                        \"color\": 14876779\r\n                    }\r\n                }\r\n            },\r\n            \"closed\": false,\r\n            \"folders\": {\r\n                \"大小\": {\r\n                    \"preset\": \"Default\",\r\n                    \"closed\": false,\r\n                    \"folders\": {}\r\n                },\r\n                \"颜色\": {\r\n                    \"preset\": \"Default\",\r\n                    \"closed\": false,\r\n                    \"folders\": {}\r\n                }\r\n            }\r\n        };\r\n        this.config = new FizzyText();\r\n        this.gui = new __WEBPACK_IMPORTED_MODULE_4_dat_gui___default.a.GUI({ autoPlace: false, load: myjson });\r\n        this.gameArea.parentElement.appendChild(this.gui.domElement);\r\n        this.gui.domElement.style.cssText = 'position: absolute; right: 0; top: 0; margin-right: 10px';\r\n        var folder1 = this.gui.addFolder('大小');\r\n        folder1.add(this.config, 'width', 1, 10).step(.1).onChange(function () {\r\n            _this.box.scale.x = _this.config.width;\r\n        });\r\n        folder1.add(this.config, 'heigth', 1, 10).onChange(function () {\r\n            _this.box.scale.y = _this.config.heigth;\r\n        });\r\n        folder1.add(this.config, 'depth', 1, 10).onChange(function () {\r\n            _this.box.scale.z = _this.config.depth;\r\n        });\r\n        var folder2 = this.gui.addFolder('颜色');\r\n        folder2.addColor(this.config, 'color').onChange(function () {\r\n            _this.box.material.color = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Color\"](_this.config.color);\r\n        });\r\n        this.gui.remember(this.config);\r\n        this.gui.revert(this.gui);\r\n    };\r\n    App.prototype.initLight = function () {\r\n        this.ambLight = new __WEBPACK_IMPORTED_MODULE_0_three__[\"AmbientLight\"](0xffffff);\r\n        this.scene.add(this.ambLight);\r\n        // this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        // this.dirLight.position.set(0.5, 1, 0.2);\r\n        // this.scene.add(this.dirLight);\r\n    };\r\n    App.prototype.initObject = function () {\r\n        var planeGeo = new __WEBPACK_IMPORTED_MODULE_0_three__[\"PlaneGeometry\"](100, 100, 10, 10);\r\n        var planeMat = new __WEBPACK_IMPORTED_MODULE_0_three__[\"MeshBasicMaterial\"]({ wireframe: true });\r\n        var plane = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Mesh\"](planeGeo, planeMat);\r\n        plane.rotateX(Math.PI * 0.5);\r\n        this.scene.add(plane);\r\n        var boxGeo = new __WEBPACK_IMPORTED_MODULE_0_three__[\"BoxGeometry\"](1, 1, 1);\r\n        var boxMat = new __WEBPACK_IMPORTED_MODULE_0_three__[\"MeshPhongMaterial\"]({ color: 0x00ffff });\r\n        this.box = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Mesh\"](boxGeo, boxMat);\r\n        this.box.position.set(0, 0, 0);\r\n        this.scene.add(this.box);\r\n    };\r\n    App.prototype.enterFrame = function () {\r\n        requestAnimationFrame(this.enterFrame.bind(this));\r\n        this.controls.update();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.stats.update();\r\n    };\r\n    App.NUM = 20;\r\n    App.SCREEN_WIDTH = document.documentElement.clientWidth;\r\n    App.SCREEN_HEIGHT = document.documentElement.clientHeight;\r\n    return App;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\r\nvar FizzyText = (function () {\r\n    function FizzyText() {\r\n        this.width = 1;\r\n        this.heigth = 1;\r\n        this.depth = 1;\r\n        this.color = 0x00ffff;\r\n    }\r\n    return FizzyText;\r\n}());\r\n\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports) {\n\n/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports) {\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports) {\n\n// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.e65d5dac8d14f58e5836.js","import * as THREE from 'three'\nimport Stats from 'three/examples/js/libs/stats.min'\nimport 'three/examples/js/controls/OrbitControls'\nimport 'three/examples/js/controls/DeviceOrientationControls'\nimport dat from 'dat-gui'\n\nclass App{\n    private static NUM = 20\n    private static SCREEN_WIDTH = document.documentElement.clientWidth\n    private static SCREEN_HEIGHT = document.documentElement.clientHeight\n\n    private gameArea: HTMLElement\n    private renderer: THREE.WebGLRenderer\n    private scene: THREE.Scene\n    private camera: THREE.PerspectiveCamera\n    private controls: THREE.OrbitControls | THREE.DeviceOrientationControls\n\n    private stats: Stats\n\n    private ambLight: THREE.AmbientLight\n    private dirLight: THREE.DirectionalLight\n    private box: THREE.Mesh\n\n    private config: FizzyText\n    private gui: dat.GUI\n\n    constructor () {\n        this.renderer = new THREE.WebGLRenderer({antialias: true})\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.stats = new Stats();\n        this.gameArea = <HTMLElement>document.querySelector('.game-area')\n        if(this.gameArea) {\n            this.gameArea.appendChild(this.renderer.domElement)\n            this.gameArea.appendChild(this.stats.dom);\n        }\n        \n        this.scene = new THREE.Scene()\n\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.z = 10;\n        this.controls = new THREE.OrbitControls( this.camera, this.gameArea );\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\n\n        this.initLight()\n        this.initObject()\n        this.enterFrame()\n        this.initGUI()\n        \n    }\n\n    initGUI () {\n        let myjson = {\n            \"preset\": \"Default\",\n            \"remembered\": {\n                \"Default\": {\n                    \"0\": {\n                        \"width\": 6.1000000000000005,\n                        \"heigth\": 6.9958642081681885,\n                        \"depth\": 7.095123212131656,\n                        \"color\": 65535\n                    }\n                },\n                \"red\": {\n                    \"0\": {\n                        \"width\": 10,\n                        \"heigth\": 10,\n                        \"depth\": 10,\n                        \"color\": 14876779\n                    }\n                }\n            },\n            \"closed\": false,\n            \"folders\": {\n                \"大小\": {\n                    \"preset\": \"Default\",\n                    \"closed\": false,\n                    \"folders\": {}\n                },\n                \"颜色\": {\n                    \"preset\": \"Default\",\n                    \"closed\": false,\n                    \"folders\": {}\n                }\n            }\n        }\n        this.config = new FizzyText();\n        this.gui = new dat.GUI({ autoPlace: false, load: myjson });\n        (this.gameArea.parentElement as HTMLElement).appendChild(this.gui.domElement)\n        this.gui.domElement.style.cssText = 'position: absolute; right: 0; top: 0; margin-right: 10px';\n        let folder1 = this.gui.addFolder( '大小' );\n        folder1.add(this.config, 'width', 1, 10).step(.1).onChange(()=>{\n            this.box.scale.x = this.config.width\n        });\n        folder1.add(this.config, 'heigth', 1, 10).onChange(()=>{\n            this.box.scale.y = this.config.heigth\n        });\n        folder1.add(this.config, 'depth', 1, 10).onChange(()=>{\n            this.box.scale.z = this.config.depth\n        });\n        let folder2 = this.gui.addFolder( '颜色' );\n        folder2.addColor(this.config, 'color').onChange(()=>{\n            (this.box.material as THREE.MeshPhongMaterial).color = new THREE.Color(this.config.color)\n        });\n\n        this.gui.remember(this.config)\n        this.gui.revert(this.gui)\n    }\n\n    initLight() {\n\n        this.ambLight = new THREE.AmbientLight(0xffffff);\n        this.scene.add( this.ambLight );\n\n        // this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\n        // this.dirLight.position.set(0.5, 1, 0.2);\n        // this.scene.add(this.dirLight);\n    }\n    \n    initObject () {\n        let planeGeo = new THREE.PlaneGeometry(100,100,10,10)\n        let planeMat = new THREE.MeshBasicMaterial({wireframe: true})\n        let plane = new THREE.Mesh(planeGeo, planeMat);\n        plane.rotateX(Math.PI*0.5)\n        this.scene.add( plane );\n\n        let boxGeo = new THREE.BoxGeometry(1, 1, 1)\n        let boxMat = new THREE.MeshPhongMaterial( { color: 0x00ffff } )\n        \n        this.box = new THREE.Mesh( boxGeo, boxMat )\n        this.box.position.set(0,0,0)\n        this.scene.add(this.box)\n    }\n\n    enterFrame () {\n        requestAnimationFrame(this.enterFrame.bind(this));\n\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera )\n        this.stats.update();\n    }\n}\n\nexport default App\n\nclass FizzyText {\n    public width:number = 1;\n    public heigth:number = 1;\n    public depth:number = 1;\n    public color = 0x00ffff;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/baseBox/main.ts","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/DeviceOrientationControls.js\n// module id = 29\n// module chunks = 0 1","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/OrbitControls.js\n// module id = 30\n// module chunks = 0 1","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/libs/stats.min.js\n// module id = 31\n// module chunks = 0 1"],"sourceRoot":""}