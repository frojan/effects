{"version":3,"sources":["webpack:///static/js/1.7ae4da2293aab0103f13.js","webpack:///./src/pages/game/flappyBird/main.ts","webpack:///./src/pages/game/flappyBird/Tube.ts"],"names":["webpackJsonp","23","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__Tube__","App","this","tubes","targetIndex","score","numDie","gravity","flySpeedY","gameover","renderer","PIXI","autoDetectRenderer","SCREEN_WIDTH","SCREEN_HEIGHT","antialias","transparent","resolution","forceCanvas","view","style","width","height","document","querySelector","appendChild","stage","Container","initBg","createTube","initBird","initPanel","enterFrame","prototype","bg","Graphics","beginFill","drawRect","endFill","x","y","addChild","tube","lastPosx","i","NUM","push","bird","pivot","interactive","on","onDown","bind","event","scorePanel","Text","fontFamily","fontSize","fill","scoreUpdate","text","requestAnimationFrame","length","hitTube","update","init","render","upTube","getChildAt","downTube","hit","up","down","hitTestRectangle","c1","c2","combinedHalfWidths","combinedHalfHeights","vx","vy","Math","abs","documentElement","clientWidth","clientHeight","28","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","Tube","_super","_this","call","tubeUp","tubeDown","floor","random","minHeight","color","clear"],"mappings":"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","file":"static/js/1.7ae4da2293aab0103f13.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 23:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Tube__ = __webpack_require__(28);\n\r\nvar App = (function () {\r\n    function App() {\r\n        this.tubes = [];\r\n        this.targetIndex = 0;\r\n        this.score = 0;\r\n        this.numDie = 0;\r\n        this.gravity = 0.2;\r\n        this.flySpeedY = 0;\r\n        this.gameover = false;\r\n        this.renderer = PIXI.autoDetectRenderer(App.SCREEN_WIDTH, App.SCREEN_HEIGHT, {\r\n            antialias: true,\r\n            transparent: false,\r\n            resolution: 1,\r\n            forceCanvas: true\r\n        });\r\n        this.renderer.view.style.width = App.SCREEN_WIDTH + 'px';\r\n        this.renderer.view.style.height = App.SCREEN_HEIGHT + 'px';\r\n        var gameArea = document.querySelector('.game-area');\r\n        gameArea.appendChild(this.renderer.view);\r\n        this.stage = new PIXI.Container();\r\n        // this.stage.scale.set(10)\r\n        // this.renderer.resize(App.SCREEN_WIDTH*10, App.SCREEN_HEIGHT*10)\r\n        this.initBg();\r\n        this.createTube();\r\n        this.initBird();\r\n        this.initPanel();\r\n        this.enterFrame();\r\n    }\r\n    App.prototype.initBg = function () {\r\n        this.bg = new PIXI.Graphics();\r\n        this.bg.beginFill(0x000000);\r\n        this.bg.drawRect(0, 0, App.SCREEN_WIDTH, App.SCREEN_HEIGHT);\r\n        this.bg.endFill();\r\n        this.bg.x = 0;\r\n        this.bg.y = 0;\r\n        this.stage.addChild(this.bg);\r\n    };\r\n    App.prototype.createTube = function () {\r\n        var tube;\r\n        var lastPosx = App.SCREEN_WIDTH;\r\n        for (var i = 0; i < App.NUM; i++) {\r\n            tube = new __WEBPACK_IMPORTED_MODULE_0__Tube__[\"a\" /* default */](lastPosx);\r\n            this.stage.addChild(tube);\r\n            this.tubes.push(tube);\r\n            lastPosx += 150;\r\n        }\r\n    };\r\n    App.prototype.initBird = function () {\r\n        this.bird = new PIXI.Graphics();\r\n        this.bird.beginFill(0xffffff);\r\n        this.bird.drawRect(0, 0, 20, 20);\r\n        this.bird.endFill();\r\n        this.bird.x = App.SCREEN_WIDTH * 0.5;\r\n        this.bird.y = App.SCREEN_HEIGHT * 0.5;\r\n        this.bird.pivot.x = this.bird.width / 2;\r\n        this.bird.pivot.y = this.bird.height / 2;\r\n        this.stage.addChild(this.bird);\r\n        this.stage.interactive = true;\r\n        this.stage.on('pointerdown', this.onDown.bind(this));\r\n    };\r\n    App.prototype.onDown = function (event) {\r\n        this.flySpeedY = -4;\r\n        this.gameover = false;\r\n    };\r\n    App.prototype.initPanel = function () {\r\n        this.scorePanel = new PIXI.Text(\"\\u5206\\u6570\\uFF1A\" + this.score, {\r\n            fontFamily: \"Arial\",\r\n            fontSize: 20,\r\n            fill: \"white\"\r\n        });\r\n        this.scorePanel.x = 0;\r\n        this.scorePanel.y = 0;\r\n        this.stage.addChild(this.scorePanel);\r\n    };\r\n    App.prototype.scoreUpdate = function () {\r\n        this.scorePanel.text = \"score: \" + this.score + \"\\ndie: \" + this.numDie;\r\n    };\r\n    App.prototype.enterFrame = function () {\r\n        requestAnimationFrame(this.enterFrame.bind(this));\r\n        this.flySpeedY += this.gravity;\r\n        this.bird.y += this.flySpeedY;\r\n        if (!this.gameover) {\r\n            for (var i = 0; i < this.tubes.length; i++) {\r\n                if (this.hitTube(this.tubes[i], this.bird)) {\r\n                    this.numDie++;\r\n                    this.gameover = true;\r\n                    return;\r\n                }\r\n                this.tubes[i].update();\r\n                if (this.tubes[i].x < -this.tubes[i].width) {\r\n                    this.tubes[i].init(this.tubes[i === 0 ? this.tubes.length - 1 : i - 1].x + 150);\r\n                }\r\n            }\r\n            if (this.bird.y >= App.SCREEN_HEIGHT) {\r\n                this.numDie++;\r\n                this.gameover = true;\r\n            }\r\n            if (this.bird.x - this.bird.width * .5 > this.tubes[this.targetIndex].x + this.tubes[this.targetIndex].width) {\r\n                this.targetIndex = (this.targetIndex + 1) % this.tubes.length;\r\n                this.score++;\r\n            }\r\n        }\r\n        if (this.bird.y >= App.SCREEN_HEIGHT) {\r\n            this.bird.y = App.SCREEN_HEIGHT;\r\n        }\r\n        this.scoreUpdate();\r\n        this.renderer.render(this.stage);\r\n    };\r\n    App.prototype.hitTube = function (tube, bird) {\r\n        var upTube = tube.getChildAt(0);\r\n        var downTube = tube.getChildAt(1);\r\n        var hit = false;\r\n        var up = {\r\n            x: tube.x + tube.width * .5,\r\n            y: upTube.y + upTube.height * .5,\r\n            width: tube.width,\r\n            height: upTube.height\r\n        };\r\n        var down = {\r\n            x: tube.x + tube.width * .5,\r\n            y: downTube.y + downTube.height * .5,\r\n            width: tube.width,\r\n            height: downTube.height\r\n        };\r\n        if (this.hitTestRectangle(up, bird)) {\r\n            hit = true;\r\n            // console.log('hit up')\r\n        }\r\n        else if (this.hitTestRectangle(down, bird)) {\r\n            hit = true;\r\n            // console.log('hit down')\r\n        }\r\n        return hit;\r\n    };\r\n    App.prototype.hitTestRectangle = function (c1, c2) {\r\n        var hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\r\n        hit = false;\r\n        vx = c1.x - c2.x;\r\n        vy = c1.y - c2.y;\r\n        combinedHalfWidths = c1.width * .5 + c2.width * .5;\r\n        combinedHalfHeights = c1.height * .5 + c2.height * .5;\r\n        if (Math.abs(vx) < combinedHalfWidths && Math.abs(vy) < combinedHalfHeights) {\r\n            hit = true;\r\n        }\r\n        else {\r\n            hit = false;\r\n        }\r\n        return hit;\r\n    };\r\n    App.NUM = 5;\r\n    App.SCREEN_WIDTH = document.documentElement.clientWidth;\r\n    App.SCREEN_HEIGHT = document.documentElement.clientHeight;\r\n    return App;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\r\n\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar Tube = (function (_super) {\r\n    __extends(Tube, _super);\r\n    function Tube(x) {\r\n        var _this = _super.call(this) || this;\r\n        _this.vx = 1;\r\n        _this.tubeUp = new PIXI.Graphics();\r\n        _this.tubeDown = new PIXI.Graphics();\r\n        _this.addChild(_this.tubeUp);\r\n        _this.addChild(_this.tubeDown);\r\n        _this.init(x);\r\n        return _this;\r\n    }\r\n    Tube.prototype.init = function (x) {\r\n        var space = 100;\r\n        var minHeight = 100;\r\n        var height = Math.floor(Math.random() * (Tube.SCREEN_HEIGHT - space - minHeight * 2) + minHeight);\r\n        var color = 0xffffff * Math.random();\r\n        this.tubeUp.clear();\r\n        this.tubeUp.beginFill(color);\r\n        this.tubeUp.drawRect(0, 0, 40, height);\r\n        this.tubeUp.endFill();\r\n        this.tubeUp.x = 0;\r\n        this.tubeUp.y = 0;\r\n        this.tubeDown.clear();\r\n        this.tubeDown.beginFill(color);\r\n        this.tubeDown.drawRect(0, 0, 40, Tube.SCREEN_HEIGHT - space - height);\r\n        this.tubeDown.endFill();\r\n        this.tubeDown.x = 0;\r\n        this.tubeDown.y = Tube.SCREEN_HEIGHT - this.tubeDown.height;\r\n        this.x = x;\r\n    };\r\n    Tube.prototype.update = function () {\r\n        this.x -= this.vx;\r\n    };\r\n    Tube.SCREEN_WIDTH = document.documentElement.clientWidth;\r\n    Tube.SCREEN_HEIGHT = document.documentElement.clientHeight;\r\n    return Tube;\r\n}(PIXI.Container));\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (Tube);\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.7ae4da2293aab0103f13.js","import Tube from './Tube'\nclass App{\n    private static NUM = 5\n    private static SCREEN_WIDTH = document.documentElement.clientWidth\n    private static SCREEN_HEIGHT = document.documentElement.clientHeight\n\n    private renderer: PIXI.WebGLRenderer | PIXI.CanvasRenderer\n    private stage: PIXI.Container\n\n    private bg: PIXI.Graphics\n    private tubes: Tube[] = []\n    private bird: PIXI.Graphics\n    private targetIndex: number = 0\n\n    private score: number = 0\n    private numDie: number = 0\n\n    private scorePanel: PIXI.Text\n\n    private gravity: number = 0.2\n    private flySpeedY: number = 0\n\n    private gameover: boolean = false\n\n    constructor () {\n        this.renderer = PIXI.autoDetectRenderer(App.SCREEN_WIDTH, App.SCREEN_HEIGHT, \n        {\n            antialias: true, \n            transparent: false, \n            resolution: 1,\n            forceCanvas: true\n        })\n        this.renderer.view.style.width = App.SCREEN_WIDTH + 'px'\n        this.renderer.view.style.height = App.SCREEN_HEIGHT + 'px'\n        let gameArea: any = document.querySelector('.game-area')\n        gameArea.appendChild(this.renderer.view)\n        this.stage = new PIXI.Container()\n        // this.stage.scale.set(10)\n        // this.renderer.resize(App.SCREEN_WIDTH*10, App.SCREEN_HEIGHT*10)\n        this.initBg()\n        this.createTube()\n        this.initBird()\n        this.initPanel()\n        this.enterFrame()\n    }\n    initBg(){\n        this.bg = new PIXI.Graphics()\n        this.bg.beginFill(0x000000)\n        this.bg.drawRect(0, 0, App.SCREEN_WIDTH, App.SCREEN_HEIGHT)\n        this.bg.endFill()\n        this.bg.x = 0\n        this.bg.y = 0\n        this.stage.addChild(this.bg)\n    }\n    createTube () {\n        let tube\n        let lastPosx = App.SCREEN_WIDTH\n        for(let i=0; i<App.NUM; i++){\n            tube = new Tube(lastPosx)\n            this.stage.addChild(tube)\n            this.tubes.push(tube)\n\n            lastPosx += 150\n        }\n    }\n    initBird () {\n        this.bird = new PIXI.Graphics()\n        this.bird.beginFill(0xffffff)\n        this.bird.drawRect(0, 0, 20, 20)\n        this.bird.endFill()\n        this.bird.x = App.SCREEN_WIDTH * 0.5\n        this.bird.y = App.SCREEN_HEIGHT * 0.5\n        this.bird.pivot.x = this.bird.width / 2\n        this.bird.pivot.y = this.bird.height / 2\n\n        this.stage.addChild(this.bird)\n        \n        this.stage.interactive = true\n        this.stage.on('pointerdown', this.onDown.bind(this))\n    }\n    onDown (event: any) {\n        this.flySpeedY = -4\n        this.gameover = false\n    }\n    initPanel () {\n        this.scorePanel = new PIXI.Text(`分数：${this.score}`, {\n            fontFamily: \"Arial\",\n            fontSize: 20,\n            fill: \"white\"\n        })\n        this.scorePanel.x = 0\n        this.scorePanel.y = 0\n        this.stage.addChild(this.scorePanel)\n    }\n    scoreUpdate () {\n        this.scorePanel.text = `score: ${this.score}\\ndie: ${this.numDie}`\n    }\n    enterFrame () {\n        requestAnimationFrame(this.enterFrame.bind(this));\n\n        this.flySpeedY += this.gravity\n        this.bird.y += this.flySpeedY\n\n        if(!this.gameover){\n            for(let i = 0; i < this.tubes.length; i++ ){\n                if(this.hitTube(this.tubes[i], this.bird)){\n                    this.numDie++\n                    this.gameover = true\n                    return\n                }\n                this.tubes[i].update()\n                if(this.tubes[i].x < -this.tubes[i].width){\n                    this.tubes[i].init(this.tubes[i === 0 ? this.tubes.length-1 : i - 1].x + 150)\n                }\n            }\n            if (this.bird.y >= App.SCREEN_HEIGHT) {\n                this.numDie++\n                this.gameover = true\n            }\n\n            if(this.bird.x - this.bird.width*.5 > this.tubes[this.targetIndex].x+this.tubes[this.targetIndex].width){   \n                this.targetIndex = (this.targetIndex+1) % this.tubes.length\n                this.score++\n            }\n        }\n\n        if (this.bird.y >= App.SCREEN_HEIGHT) {\n            this.bird.y = App.SCREEN_HEIGHT\n        } \n        \n        this.scoreUpdate()\n        this.renderer.render(this.stage)\n    }\n\n    hitTube(tube: PIXI.Container, bird: PIXI.Container){\n        let upTube = <PIXI.Graphics>tube.getChildAt(0)\n        let downTube = <PIXI.Graphics>tube.getChildAt(1)\n        let hit = false\n        let up = {\n            x: tube.x + tube.width * .5,\n            y: upTube.y + upTube.height * .5,\n            width: tube.width,\n            height: upTube.height\n        }\n        let down = {\n            x: tube.x + tube.width * .5,\n            y: downTube.y + downTube.height * .5,\n            width: tube.width,\n            height: downTube.height\n        }\n        if (this.hitTestRectangle(up, bird)) {\n            hit = true\n            // console.log('hit up')\n        }else if(this.hitTestRectangle(down, bird)){\n            hit = true\n            // console.log('hit down')\n        }\n        return hit\n    }\n\n    hitTestRectangle (c1: any, c2: PIXI.Container) {\n        var hit, combinedHalfWidths, combinedHalfHeights, vx, vy\n        hit = false\n        vx = c1.x - c2.x\n        vy = c1.y - c2.y\n        combinedHalfWidths = c1.width*.5 + c2.width*.5;\n        combinedHalfHeights = c1.height*.5 + c2.height*.5;\n\n        if (Math.abs(vx) < combinedHalfWidths && Math.abs(vy) < combinedHalfHeights) {\n            hit = true;\n        } else {\n            hit = false;\n        }\n        return hit;\n    }\n}\n\nexport default App\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/flappyBird/main.ts","class Tube extends PIXI.Container{\n    private static SCREEN_WIDTH = document.documentElement.clientWidth\n    private static SCREEN_HEIGHT = document.documentElement.clientHeight\n\n    public vx: number = 1\n    private tubeUp: PIXI.Graphics\n    private tubeDown: PIXI.Graphics\n    constructor(x:number){\n        super()\n        this.tubeUp = new PIXI.Graphics()\n        this.tubeDown = new PIXI.Graphics()\n        this.addChild(this.tubeUp)\n        this.addChild(this.tubeDown)\n        this.init(x)\n    }\n    init (x: number) {\n        let space = 100\n        let minHeight = 100\n        let height = Math.floor(Math.random() * (Tube.SCREEN_HEIGHT-space-minHeight*2) + minHeight)\n        let color = 0xffffff * Math.random()\n\n        this.tubeUp.clear()\n        this.tubeUp.beginFill(color)\n        this.tubeUp.drawRect(0, 0, 40, height)\n        this.tubeUp.endFill()\n        this.tubeUp.x = 0 \n        this.tubeUp.y = 0\n\n        this.tubeDown.clear()\n        this.tubeDown.beginFill(color)\n        this.tubeDown.drawRect(0, 0, 40, Tube.SCREEN_HEIGHT-space-height)\n        this.tubeDown.endFill()\n        this.tubeDown.x = 0\n        this.tubeDown.y = Tube.SCREEN_HEIGHT - this.tubeDown.height\n\n        this.x = x\n    }\n    update(){\n        this.x -= this.vx\n    }\n}\nexport default Tube\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/flappyBird/Tube.ts"],"sourceRoot":""}