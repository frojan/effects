{"version":3,"sources":["webpack:///static/js/1.e109fbbf27cd1b180804.js","webpack:///./src/pages/game/particle_sprite/main.ts","webpack:///./~/three/examples/js/controls/DeviceOrientationControls.js?11fe","webpack:///./~/three/examples/js/controls/OrbitControls.js?df0e","webpack:///./~/three/examples/js/libs/stats.min.js?9b50","webpack:///./src/assets/fireworks1.png?5f91","webpack:///./src/pages/game/particle_sprite/Particle.ts"],"names":["webpackJsonp","27","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_three__","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__","n","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default","__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__","__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__","__WEBPACK_IMPORTED_MODULE_4_dat_gui__","__WEBPACK_IMPORTED_MODULE_4_dat_gui___default","__WEBPACK_IMPORTED_MODULE_5__Particle__","imgSrc","App","this","particles","clock","canvasWidth","canvasHeight","particleConfig","textures","number","minPos","x","y","z","w","maxPos","minSpeed","maxSpeed","maxRotSpeed","particleFrameCount","frameCountPerRow","isHaveLife","colorStart","colorEnd","isNeedChangeDir","minUpdateFrameSpeed","maxUpdateFrameSpeed","scale","isNeedKeepDir","colorPar","r","g","b","startAlpha","endAlpha","renderer","antialias","setClearColor","setSize","setPixelRatio","window","devicePixelRatio","stats","a","gameArea","document","querySelector","appendChild","domElement","dom","scene","camera","position","controls","initLight","initObj","initParticle","initGUI","enterFrame","prototype","planeGeo","planeMat","wireframe","plane","rotateX","Math","PI","add","createShaderMaterial","texture","uniforms","type","rotation","frame","mcolor","frameData","ceil","vertexShader","fragmentShader","transparent","vertexColors","particleContainer","particle","material","i","load","resetParticle","push","px","randomFloat","py","pz","speedX","speedY","speedZ","speedRot","boomSpeed","psize","targetFrame","floor","pcolor","min","max","random","updateParticles","clearPartices","remove","_this","myjson","config","FizzyText","gui","GUI","autoPlace","parentElement","style","cssText","folder1","addFolder","onChange","folder2","folder3","folder4","folder5","addColor","onFinishChange","step","other","remember","revert","ambLight","clampFun","val","requestAnimationFrame","bind","intervalTime","temp","time","Date","now","totalFrame","hasLife","needChangeDir","length","lastUpdateTime","prot","update","render","SCREEN_WIDTH","documentElement","clientWidth","SCREEN_HEIGHT","clientHeight","width","heigth","depth","color","31","exports","THREE","DeviceOrientationControls","object","scope","reorder","enabled","deviceOrientation","screenOrientation","alpha","alphaOffsetAngle","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","zee","Vector3","euler","Euler","q0","Quaternion","q1","sqrt","quaternion","beta","gamma","orient","set","setFromEuler","multiply","setFromAxisAngle","connect","addEventListener","disconnect","removeEventListener","degToRad","updateAlphaOffsetAngle","angle","dispose","32","OrbitControls","getAutoRotationAngle","autoRotateSpeed","getZoomScale","pow","zoomSpeed","rotateLeft","sphericalDelta","theta","rotateUp","phi","dollyIn","dollyScale","PerspectiveCamera","OrthographicCamera","zoom","minZoom","maxZoom","updateProjectionMatrix","zoomChanged","console","warn","enableZoom","dollyOut","handleMouseDownRotate","rotateStart","clientX","clientY","handleMouseDownDolly","dollyStart","handleMouseDownPan","panStart","handleMouseMoveRotate","rotateEnd","rotateDelta","subVectors","element","body","rotateSpeed","copy","handleMouseMoveDolly","dollyEnd","dollyDelta","handleMouseMovePan","panEnd","panDelta","pan","handleMouseUp","handleMouseWheel","deltaY","handleKeyDown","keyCode","keys","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDolly","dx","dy","distance","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleTouchEnd","onMouseDown","preventDefault","button","mouseButtons","ORBIT","enableRotate","state","STATE","ROTATE","ZOOM","DOLLY","PAN","enablePan","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","endEvent","onMouseWheel","stopPropagation","onKeyDown","enableKeys","onTouchStart","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","onTouchMove","onTouchEnd","onContextMenu","undefined","target","minDistance","maxDistance","Infinity","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","autoRotate","MOUSE","MIDDLE","target0","clone","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","reset","changeEvent","offset","quat","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","makeSafe","radius","panOffset","setFromSpherical","lookAt","distanceToSquared","EPS","dot","Spherical","Vector2","panLeft","v","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","deltaX","targetDistance","tan","fov","matrix","right","left","top","bottom","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","33","Stats","h","c","k","d","children","display","l","createElement","performance","e","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","end","usedJSHeapSize","jsHeapSizeLimit","setMode","round","u","m","p","q","height","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","drawImage","35","39","__extends","extendStatics","setPrototypeOf","__proto__","Array","hasOwnProperty","__","Particle","_super","call","enumerable","configurable","col"],"mappings":"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","file":"static/js/1.e109fbbf27cd1b180804.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 27:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_dat_gui__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_dat_gui___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_dat_gui__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Particle__ = __webpack_require__(39);\n\r\n\r\n\r\n\r\n\r\n\r\nvar imgSrc = __webpack_require__(35);\r\nvar App = (function () {\r\n    function App() {\r\n        this.particles = [];\r\n        this.clock = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Clock\"]();\r\n        this.canvasWidth = 1200 * 0.5;\r\n        this.canvasHeight = 1200 * 0.5;\r\n        this.particleConfig = {\r\n            \"textures\": [\r\n                \"resource/fireworks1.png\"\r\n            ],\r\n            \"number\": 10,\r\n            \"minPos\": {\r\n                \"x\": -10,\r\n                \"y\": 10,\r\n                \"z\": -30,\r\n                \"w\": 1\r\n            },\r\n            \"maxPos\": {\r\n                \"x\": 10,\r\n                \"y\": 18,\r\n                \"z\": 30,\r\n                \"w\": 1\r\n            },\r\n            \"minSpeed\": {\r\n                \"x\": 0,\r\n                \"y\": 0,\r\n                \"z\": 0,\r\n                \"w\": 1\r\n            },\r\n            \"maxSpeed\": {\r\n                \"x\": 0,\r\n                \"y\": 0,\r\n                \"z\": 0,\r\n                \"w\": 1\r\n            },\r\n            \"maxRotSpeed\": 0,\r\n            \"particleFrameCount\": 25,\r\n            \"frameCountPerRow\": 5,\r\n            \"isHaveLife\": true,\r\n            \"colorStart\": {\r\n                \"x\": 1,\r\n                \"y\": 1,\r\n                \"z\": 1,\r\n                \"w\": 1\r\n            },\r\n            \"colorEnd\": {\r\n                \"x\": 1,\r\n                \"y\": 1,\r\n                \"z\": 1,\r\n                \"w\": 1\r\n            },\r\n            \"isNeedChangeDir\": false,\r\n            \"minUpdateFrameSpeed\": 50,\r\n            \"maxUpdateFrameSpeed\": 100,\r\n            \"scale\": 3.5,\r\n            \"isNeedKeepDir\": false\r\n        };\r\n        this.colorPar = {\r\n            colorStart: { r: 255, g: 255, b: 255 },\r\n            startAlpha: 1,\r\n            colorEnd: { r: 255, g: 255, b: 255 },\r\n            endAlpha: 1\r\n        };\r\n        this.renderer = new __WEBPACK_IMPORTED_MODULE_0_three__[\"WebGLRenderer\"]({ antialias: true });\r\n        this.renderer.setClearColor(new __WEBPACK_IMPORTED_MODULE_0_three__[\"Color\"](0x333333), 1);\r\n        this.renderer.setSize(this.canvasWidth, this.canvasHeight);\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.stats = new __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default.a();\r\n        this.gameArea = document.querySelector('.game-area');\r\n        if (this.gameArea) {\r\n            this.gameArea.appendChild(this.renderer.domElement);\r\n            this.gameArea.appendChild(this.stats.dom);\r\n        }\r\n        this.scene = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Scene\"]();\r\n        this.camera = new __WEBPACK_IMPORTED_MODULE_0_three__[\"PerspectiveCamera\"](75, this.canvasWidth / this.canvasHeight, 1, 10000);\r\n        this.camera.position.z = 10;\r\n        this.controls = new __WEBPACK_IMPORTED_MODULE_0_three__[\"OrbitControls\"](this.camera, this.gameArea);\r\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\r\n        this.initLight();\r\n        this.initObj();\r\n        this.initParticle();\r\n        this.initGUI();\r\n        this.enterFrame();\r\n    }\r\n    App.prototype.initObj = function () {\r\n        var planeGeo = new __WEBPACK_IMPORTED_MODULE_0_three__[\"PlaneGeometry\"](100, 100, 10, 10);\r\n        var planeMat = new __WEBPACK_IMPORTED_MODULE_0_three__[\"MeshBasicMaterial\"]({ wireframe: true });\r\n        var plane = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Mesh\"](planeGeo, planeMat);\r\n        plane.rotateX(Math.PI * 0.5);\r\n        this.scene.add(plane);\r\n    };\r\n    App.prototype.createShaderMaterial = function (texture) {\r\n        var vertexshader = \"varying vec2 fUV;\\n            uniform vec3 scale;\\n            uniform float rotation;\\n\\n            void main() {\\n                fUV = uv;\\n                vec3 alignedPosition = position * scale;\\n\\n                vec2 rotatedPosition;\\n                rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n                rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\n                vec4 finalPosition;\\n\\n                finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n                finalPosition.xy += rotatedPosition;\\n                finalPosition = projectionMatrix * finalPosition;\\n\\n                gl_Position =  finalPosition;\\n            }\";\r\n        var fragmentShader = \"varying vec2 fUV;\\n            uniform sampler2D texture;\\n            uniform float frame;\\n            uniform vec3 frameData;\\n            uniform vec4 mcolor;\\n            float mmod (float x, float y) {\\n                return x - y * floor(x*100.0/(y*100.0));\\n            }\\n            void main() {\\n                vec2 uv = vec2(fUV.x, fUV.y);\\n                vec2 repeat = vec2(1.0/frameData.x, 1.0/frameData.y);\\n                float temp = mmod(frame, frameData.z);\\n                vec2 offset = vec2( mmod(temp,frameData.x) / frameData.x, 1.0-((1.0+floor(temp*100.0/(frameData.x*100.0)))/frameData.y) );\\n                vec4 color0 = texture2D( texture, uv * repeat + offset );\\n                gl_FragColor = color0 * mcolor;\\n                \\n            }\";\r\n        this.uniforms = {\r\n            texture: { type: 't', value: texture },\r\n            scale: { type: 'v3', value: new __WEBPACK_IMPORTED_MODULE_0_three__[\"Vector3\"](1, 1, 1) },\r\n            rotation: { type: 'float', value: 0 },\r\n            frame: { type: 'float', value: 0.0 },\r\n            mcolor: { type: 'v4', value: new __WEBPACK_IMPORTED_MODULE_0_three__[\"Vector4\"](1, 1, 1, 1) },\r\n            frameData: { type: 'v3', value: new __WEBPACK_IMPORTED_MODULE_0_three__[\"Vector3\"](this.particleConfig.frameCountPerRow, Math.ceil(this.particleConfig.particleFrameCount / this.particleConfig.frameCountPerRow), this.particleConfig.particleFrameCount) }\r\n        };\r\n        var shaderMaterial = new __WEBPACK_IMPORTED_MODULE_0_three__[\"ShaderMaterial\"]({\r\n            uniforms: this.uniforms,\r\n            vertexShader: vertexshader,\r\n            fragmentShader: fragmentShader,\r\n            transparent: true,\r\n            vertexColors: __WEBPACK_IMPORTED_MODULE_0_three__[\"VertexColors\"]\r\n            // depthTest: false,\r\n            // blending: THREE.AdditiveBlending\r\n        });\r\n        return shaderMaterial;\r\n    };\r\n    App.prototype.initParticle = function () {\r\n        this.particleContainer = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Group\"]();\r\n        var particle;\r\n        var i = 0;\r\n        var material;\r\n        var texture = new __WEBPACK_IMPORTED_MODULE_0_three__[\"TextureLoader\"]().load(imgSrc);\r\n        for (i = 0; i < this.particleConfig['number']; i++) {\r\n            material = this.createShaderMaterial(texture);\r\n            particle = new __WEBPACK_IMPORTED_MODULE_5__Particle__[\"a\" /* default */](material);\r\n            this.resetParticle(particle);\r\n            this.particleContainer.add(particle);\r\n            this.particles.push(particle);\r\n        }\r\n        this.scene.add(this.particleContainer);\r\n    };\r\n    App.prototype.resetParticle = function (particle) {\r\n        var minPos = this.particleConfig.minPos;\r\n        var maxPos = this.particleConfig.maxPos;\r\n        var minSpeed = this.particleConfig.minSpeed;\r\n        var maxSpeed = this.particleConfig.maxSpeed;\r\n        var colorStart = this.particleConfig.colorStart;\r\n        var colorEnd = this.particleConfig.colorEnd;\r\n        particle.px = this.randomFloat(minPos.x, maxPos.x);\r\n        particle.py = this.randomFloat(minPos.y, maxPos.y);\r\n        particle.pz = this.randomFloat(minPos.z, maxPos.z);\r\n        particle.speedX = this.randomFloat(minSpeed.x, maxSpeed.x);\r\n        particle.speedY = this.randomFloat(minSpeed.y, maxSpeed.y);\r\n        particle.speedZ = this.randomFloat(minSpeed.z, maxSpeed.z);\r\n        particle.speedRot = this.randomFloat(0, this.particleConfig.maxRotSpeed);\r\n        particle.boomSpeed = this.randomFloat(0.5, 1) * (this.particleConfig.maxUpdateFrameSpeed - this.particleConfig.minUpdateFrameSpeed) + this.particleConfig.minUpdateFrameSpeed;\r\n        particle.psize = this.particleConfig.scale;\r\n        particle.targetFrame = Math.floor(this.randomFloat(0, this.particleConfig.particleFrameCount));\r\n        particle.pcolor = {\r\n            x: this.randomFloat(colorStart.x, colorEnd.x),\r\n            y: this.randomFloat(colorStart.y, colorEnd.y),\r\n            z: this.randomFloat(colorStart.z, colorEnd.z),\r\n            w: this.randomFloat(colorStart.w, colorEnd.w)\r\n        };\r\n    };\r\n    App.prototype.randomFloat = function (min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    };\r\n    App.prototype.updateParticles = function () {\r\n        var i = 0;\r\n        var particle;\r\n        for (i = 0; i < this.particleConfig['number']; i++) {\r\n            particle = this.particles[i];\r\n            this.resetParticle(particle);\r\n        }\r\n    };\r\n    App.prototype.clearPartices = function () {\r\n        this.scene.remove(this.particleContainer);\r\n        this.particles = [];\r\n    };\r\n    App.prototype.initGUI = function () {\r\n        var _this = this;\r\n        var myjson = {};\r\n        this.config = new FizzyText();\r\n        this.gui = new __WEBPACK_IMPORTED_MODULE_4_dat_gui___default.a.GUI({ autoPlace: false, load: myjson });\r\n        this.gameArea.parentElement.appendChild(this.gui.domElement);\r\n        this.gui.domElement.style.cssText = 'position: absolute; left: 0; top: 0; margin-left: 600px';\r\n        var folder1 = this.gui.addFolder('最小位置');\r\n        folder1.add(this.particleConfig.minPos, 'x').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder1.add(this.particleConfig.minPos, 'y').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder1.add(this.particleConfig.minPos, 'z').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        var folder2 = this.gui.addFolder('最大位置');\r\n        folder2.add(this.particleConfig.maxPos, 'x').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder2.add(this.particleConfig.maxPos, 'y').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder2.add(this.particleConfig.maxPos, 'z').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        var folder3 = this.gui.addFolder('最小速度');\r\n        folder3.add(this.particleConfig.minSpeed, 'x').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder3.add(this.particleConfig.minSpeed, 'y').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder3.add(this.particleConfig.minSpeed, 'z').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        var folder4 = this.gui.addFolder('最大速度');\r\n        folder4.add(this.particleConfig.maxSpeed, 'x').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder4.add(this.particleConfig.maxSpeed, 'y').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        folder4.add(this.particleConfig.maxSpeed, 'z').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        var folder5 = this.gui.addFolder('颜色范围');\r\n        folder5.addColor(this.colorPar, 'colorStart').onFinishChange(function () {\r\n            _this.particleConfig.colorStart.x = _this.colorPar.colorStart.r / 255;\r\n            _this.particleConfig.colorStart.y = _this.colorPar.colorStart.g / 255;\r\n            _this.particleConfig.colorStart.z = _this.colorPar.colorStart.b / 255;\r\n            _this.clearPartices();\r\n            _this.initParticle();\r\n        });\r\n        folder5.add(this.colorPar, 'startAlpha', 0, 1).step(0.01).onFinishChange(function () {\r\n            _this.particleConfig.colorStart.w = _this.colorPar.startAlpha;\r\n            _this.clearPartices();\r\n            _this.initParticle();\r\n        });\r\n        folder5.addColor(this.colorPar, 'colorEnd').onFinishChange(function () {\r\n            _this.particleConfig.colorEnd.x = _this.colorPar.colorEnd.r / 255;\r\n            _this.particleConfig.colorEnd.y = _this.colorPar.colorEnd.g / 255;\r\n            _this.particleConfig.colorEnd.z = _this.colorPar.colorEnd.b / 255;\r\n            _this.clearPartices();\r\n            _this.initParticle();\r\n        });\r\n        folder5.add(this.colorPar, 'endAlpha', 0, 1).step(0.01).onFinishChange(function () {\r\n            _this.particleConfig.colorEnd.w = _this.colorPar.endAlpha;\r\n            _this.clearPartices();\r\n            _this.initParticle();\r\n        });\r\n        var other = this.gui.addFolder('其他');\r\n        other.add(this.particleConfig, 'number').step(1).onChange(function () {\r\n            // 跟新粒子数量\r\n            _this.clearPartices();\r\n            _this.initParticle();\r\n        });\r\n        other.add(this.particleConfig, 'scale').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        other.add(this.particleConfig, 'maxRotSpeed').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        other.add(this.particleConfig, 'isHaveLife').onChange(function () {\r\n        });\r\n        other.add(this.particleConfig, 'isNeedChangeDir').onChange(function () {\r\n        });\r\n        other.add(this.particleConfig, 'minUpdateFrameSpeed').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        other.add(this.particleConfig, 'maxUpdateFrameSpeed').onChange(function () {\r\n            _this.updateParticles();\r\n        });\r\n        other.add(this.particleConfig, 'frameCountPerRow').step(1).onChange(function () {\r\n            // 更新材质\r\n            _this.clearPartices();\r\n            _this.initParticle();\r\n        });\r\n        other.add(this.particleConfig, 'particleFrameCount').step(1).onChange(function () {\r\n            // 更新材质\r\n            _this.clearPartices();\r\n            _this.initParticle();\r\n        });\r\n        this.gui.remember(this.particleConfig);\r\n        this.gui.revert(this.gui);\r\n    };\r\n    App.prototype.initLight = function () {\r\n        this.ambLight = new __WEBPACK_IMPORTED_MODULE_0_three__[\"AmbientLight\"](0xffffff);\r\n        this.scene.add(this.ambLight);\r\n        // this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        // this.dirLight.position.set(0.5, 1, 0.2);\r\n        // this.scene.add(this.dirLight);\r\n    };\r\n    App.prototype.clampFun = function (val, min, max) {\r\n        var cha = max - min;\r\n        if (val < min) {\r\n            val = (val - min) % (max - min) + max;\r\n        }\r\n        else if (val > max) {\r\n            val = (val - max) % (max - min) + min;\r\n        }\r\n        return val;\r\n    };\r\n    App.prototype.enterFrame = function () {\r\n        requestAnimationFrame(this.enterFrame.bind(this));\r\n        var time = Date.now() * 0.001;\r\n        var intervalTime;\r\n        var i = 0;\r\n        var temp;\r\n        var minPos = this.particleConfig.minPos;\r\n        var maxPos = this.particleConfig.maxPos;\r\n        var totalFrame = this.particleConfig.particleFrameCount;\r\n        var hasLife = this.particleConfig.isHaveLife;\r\n        var needChangeDir = this.particleConfig.isNeedChangeDir;\r\n        for (i = 0; i < this.particles.length; i++) {\r\n            temp = this.particles[i];\r\n            intervalTime = time - temp.lastUpdateTime;\r\n            if (intervalTime < temp.boomSpeed * 0.001)\r\n                continue;\r\n            if ((temp.targetFrame + 1) % totalFrame === 0) {\r\n                if (hasLife) {\r\n                    temp.px = this.randomFloat(minPos.x, maxPos.x);\r\n                    temp.py = this.randomFloat(minPos.y, maxPos.y);\r\n                    temp.pz = this.randomFloat(minPos.z, maxPos.z);\r\n                    var colorStart = this.particleConfig.colorStart;\r\n                    var colorEnd = this.particleConfig.colorEnd;\r\n                    temp.pcolor = {\r\n                        x: this.randomFloat(colorStart.x, colorEnd.x),\r\n                        y: this.randomFloat(colorStart.y, colorEnd.y),\r\n                        z: this.randomFloat(colorStart.z, colorEnd.z),\r\n                        w: this.randomFloat(colorStart.w, colorEnd.w)\r\n                    };\r\n                }\r\n                if (needChangeDir) {\r\n                    var minSpeed = this.particleConfig.minSpeed;\r\n                    var maxSpeed = this.particleConfig.maxSpeed;\r\n                    temp.speedX = this.randomFloat(minSpeed.x, maxSpeed.x);\r\n                    temp.speedY = this.randomFloat(minSpeed.y, maxSpeed.y);\r\n                    temp.speedZ = this.randomFloat(minSpeed.z, maxSpeed.z);\r\n                }\r\n                temp.boomSpeed = this.randomFloat(0.5, 1) * (this.particleConfig.maxUpdateFrameSpeed - this.particleConfig.minUpdateFrameSpeed) + this.particleConfig.minUpdateFrameSpeed;\r\n            }\r\n            temp.px += temp.speedX * intervalTime;\r\n            temp.py += temp.speedY * intervalTime;\r\n            temp.pz += temp.speedZ * intervalTime;\r\n            temp.prot += temp.speedRot * intervalTime;\r\n            temp.px = this.clampFun(temp.px, minPos.x, maxPos.x);\r\n            temp.py = this.clampFun(temp.py, minPos.y, maxPos.y);\r\n            temp.pz = this.clampFun(temp.pz, minPos.z, maxPos.z);\r\n            temp.prot = this.clampFun(temp.prot, 0, Math.PI * 2);\r\n            temp.targetFrame++;\r\n            temp.lastUpdateTime = time;\r\n        }\r\n        this.controls.update();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.stats.update();\r\n    };\r\n    App.SCREEN_WIDTH = document.documentElement.clientWidth;\r\n    App.SCREEN_HEIGHT = document.documentElement.clientHeight;\r\n    return App;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\r\nvar FizzyText = (function () {\r\n    function FizzyText() {\r\n        this.width = 1;\r\n        this.heigth = 1;\r\n        this.depth = 1;\r\n        this.color = 0x00ffff;\r\n    }\r\n    return FizzyText;\r\n}());\r\n\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports) {\n\n/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports) {\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports) {\n\n// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/img/fireworks1.9e47b01.png\";\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three__);\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Particle = (function (_super) {\r\n    __extends(Particle, _super);\r\n    function Particle(material) {\r\n        var _this = _super.call(this, new __WEBPACK_IMPORTED_MODULE_0_three__[\"PlaneGeometry\"](1, 1), material) || this;\r\n        _this.speedX = 0;\r\n        _this.speedY = 0;\r\n        _this.speedZ = 0;\r\n        _this.speedRot = 0;\r\n        _this.boomSpeed = 0;\r\n        _this.lastUpdateTime = 0;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Particle.prototype, \"px\", {\r\n        get: function () {\r\n            return this.position.x;\r\n        },\r\n        set: function (val) {\r\n            this.position.x = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Particle.prototype, \"py\", {\r\n        get: function () {\r\n            return this.position.y;\r\n        },\r\n        set: function (val) {\r\n            this.position.y = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Particle.prototype, \"pz\", {\r\n        get: function () {\r\n            return this.position.z;\r\n        },\r\n        set: function (val) {\r\n            this.position.z = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Particle.prototype, \"psize\", {\r\n        get: function () {\r\n            return this.material.uniforms.scale.value.x;\r\n        },\r\n        set: function (val) {\r\n            this.material.uniforms.scale.value = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Vector3\"](val, val, val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Particle.prototype, \"prot\", {\r\n        get: function () {\r\n            return this.material.uniforms.rotation.value;\r\n        },\r\n        set: function (val) {\r\n            this.material.uniforms.rotation.value = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Particle.prototype, \"targetFrame\", {\r\n        // 当前帧\r\n        get: function () {\r\n            return this.material.uniforms.frame.value;\r\n        },\r\n        set: function (val) {\r\n            this.material.uniforms.frame.value = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Particle.prototype, \"pcolor\", {\r\n        get: function () {\r\n            // return (this.material as THREE.ShaderMaterial).uniforms.frame.value\r\n            var col = this.material.uniforms.mcolor.value;\r\n            return {\r\n                x: col.x,\r\n                y: col.y,\r\n                z: col.z,\r\n                w: col.w\r\n            };\r\n        },\r\n        set: function (val) {\r\n            var color = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Vector4\"](val.x, val.y, val.z, val.w);\r\n            this.material.uniforms.mcolor.value = color;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Particle;\r\n}(__WEBPACK_IMPORTED_MODULE_0_three__[\"Mesh\"]));\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particle);\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.e109fbbf27cd1b180804.js","import * as THREE from 'three'\nimport Stats from 'three/examples/js/libs/stats.min'\nimport 'three/examples/js/controls/OrbitControls'\nimport 'three/examples/js/controls/DeviceOrientationControls'\nimport dat from 'dat-gui'\nimport Particle from './Particle'\ndeclare function require(string): string;\nvar imgSrc = require('@/assets/fireworks1.png')\n\nclass App{\n    private static SCREEN_WIDTH = document.documentElement.clientWidth\n    private static SCREEN_HEIGHT = document.documentElement.clientHeight\n\n    private gameArea: HTMLElement\n    private renderer: THREE.WebGLRenderer\n    private scene: THREE.Scene\n    private camera: THREE.PerspectiveCamera\n    private controls: THREE.OrbitControls | THREE.DeviceOrientationControls\n\n    private stats: Stats\n\n    private ambLight: THREE.AmbientLight\n    private dirLight: THREE.DirectionalLight\n    \n    private particles: Particle[] = []\n    private particleContainer: THREE.Group\n\n    private particleMaterial: THREE.Material\n    private particleGeometry: THREE.Geometry\n\n    private uniforms: any\n    private clock = new THREE.Clock()\n\n    private canvasWidth: number = 1200 * 0.5\n    private canvasHeight: number = 1200 * 0.5\n\n    private particleConfig = {\n                        \"textures\": [\n                            \"resource/fireworks1.png\"\n                        ],\n                        \"number\": 10,\n                        \"minPos\": {\n                            \"x\": -10,\n                            \"y\": 10,\n                            \"z\": -30,\n                            \"w\": 1\n                        },\n                        \"maxPos\": {\n                            \"x\": 10,\n                            \"y\": 18,\n                            \"z\": 30,\n                            \"w\": 1\n                        },\n                        \"minSpeed\": {\n                            \"x\": 0,\n                            \"y\": 0,\n                            \"z\": 0,\n                            \"w\": 1\n                        },\n                        \"maxSpeed\": {\n                            \"x\": 0,\n                            \"y\": 0,\n                            \"z\": 0,\n                            \"w\": 1\n                        },\n                        \"maxRotSpeed\": 0,\n                        \"particleFrameCount\": 25,\n                        \"frameCountPerRow\": 5,\n                        \"isHaveLife\": true,\n                        \"colorStart\": {\n                            \"x\": 1,\n                            \"y\": 1,\n                            \"z\": 1,\n                            \"w\": 1\n                        },\n                        \"colorEnd\": {\n                            \"x\": 1,\n                            \"y\": 1,\n                            \"z\": 1,\n                            \"w\": 1\n                        },\n                        \"isNeedChangeDir\": false,\n                        \"minUpdateFrameSpeed\": 50,\n                        \"maxUpdateFrameSpeed\": 100,\n                        \"scale\": 3.5,\n                        \"isNeedKeepDir\": false\n                    }\n\n    private colorPar = {\n        colorStart: {r:255,g:255,b:255},\n        startAlpha: 1,\n        colorEnd: {r:255,g:255,b:255},\n        endAlpha: 1\n    };\n    private config: FizzyText\n    private gui: dat.GUI\n\n    constructor () {\n        this.renderer = new THREE.WebGLRenderer({antialias: true})\n        this.renderer.setClearColor(new THREE.Color(0x333333), 1)\n        this.renderer.setSize( this.canvasWidth, this.canvasHeight );\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.stats = new Stats();\n        this.gameArea = <HTMLElement>document.querySelector('.game-area')\n        if(this.gameArea) {\n            this.gameArea.appendChild(this.renderer.domElement)\n            this.gameArea.appendChild(this.stats.dom);\n        }\n        \n        this.scene = new THREE.Scene()\n\n        this.camera = new THREE.PerspectiveCamera( 75, this.canvasWidth / this.canvasHeight, 1, 10000 );\n        this.camera.position.z = 10;\n        this.controls = new THREE.OrbitControls( this.camera, this.gameArea );\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\n\n        this.initLight()\n        this.initObj()\n        this.initParticle()\n        this.initGUI()\n        \n        this.enterFrame()\n    }\n    initObj () {\n        let planeGeo = new THREE.PlaneGeometry(100,100,10,10)\n        let planeMat = new THREE.MeshBasicMaterial({wireframe: true})\n        let plane = new THREE.Mesh(planeGeo, planeMat);\n        plane.rotateX(Math.PI*0.5)\n        this.scene.add( plane );\n    }\n    createShaderMaterial (texture) {\n        var vertexshader = \n            `varying vec2 fUV;\n            uniform vec3 scale;\n            uniform float rotation;\n\n            void main() {\n                fUV = uv;\n                vec3 alignedPosition = position * scale;\n\n                vec2 rotatedPosition;\n                rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n                rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n                vec4 finalPosition;\n\n                finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n                finalPosition.xy += rotatedPosition;\n                finalPosition = projectionMatrix * finalPosition;\n\n                gl_Position =  finalPosition;\n            }`;\n        var fragmentShader = \n            `varying vec2 fUV;\n            uniform sampler2D texture;\n            uniform float frame;\n            uniform vec3 frameData;\n            uniform vec4 mcolor;\n            float mmod (float x, float y) {\n                return x - y * floor(x*100.0/(y*100.0));\n            }\n            void main() {\n                vec2 uv = vec2(fUV.x, fUV.y);\n                vec2 repeat = vec2(1.0/frameData.x, 1.0/frameData.y);\n                float temp = mmod(frame, frameData.z);\n                vec2 offset = vec2( mmod(temp,frameData.x) / frameData.x, 1.0-((1.0+floor(temp*100.0/(frameData.x*100.0)))/frameData.y) );\n                vec4 color0 = texture2D( texture, uv * repeat + offset );\n                gl_FragColor = color0 * mcolor;\n                \n            }`\n        this.uniforms = {\n            texture: {type: 't', value: texture},\n            scale: {type: 'v3', value: new THREE.Vector3(1,1,1)},\n            rotation: {type: 'float', value: 0},\n            frame: {type: 'float', value: 0.0},\n            mcolor: {type: 'v4', value:new THREE.Vector4(1,1,1,1)},\n            frameData: {type: 'v3', value: new THREE.Vector3(this.particleConfig.frameCountPerRow,Math.ceil(this.particleConfig.particleFrameCount/this.particleConfig.frameCountPerRow),this.particleConfig.particleFrameCount)}\n        }\n        var shaderMaterial = new THREE.ShaderMaterial({\n            uniforms: this.uniforms,\n            vertexShader: vertexshader,\n            fragmentShader: fragmentShader,\n            transparent: true,\n            vertexColors: THREE.VertexColors\n            // depthTest: false,\n            // blending: THREE.AdditiveBlending\n        })\n\n        return shaderMaterial\n    }\n    initParticle () {\n        this.particleContainer = new THREE.Group()\n        let particle\n        let i = 0\n        let material\n        let texture = new THREE.TextureLoader().load(imgSrc)\n        for ( i = 0; i < this.particleConfig['number']; i++) {\n            material = this.createShaderMaterial(texture)\n            particle = new Particle(material)\n            this.resetParticle(particle)\n            this.particleContainer.add(particle)\n            this.particles.push(particle)\n        }\n\n        this.scene.add(this.particleContainer)\n    }\n\n    resetParticle (particle: Particle) {\n        let minPos = this.particleConfig.minPos\n        let maxPos = this.particleConfig.maxPos\n        let minSpeed = this.particleConfig.minSpeed\n        let maxSpeed = this.particleConfig.maxSpeed\n        let colorStart = this.particleConfig.colorStart\n        let colorEnd = this.particleConfig.colorEnd\n\n        particle.px = this.randomFloat(minPos.x, maxPos.x);\n        particle.py = this.randomFloat(minPos.y, maxPos.y);\n        particle.pz = this.randomFloat(minPos.z, maxPos.z);\n        particle.speedX = this.randomFloat(minSpeed.x, maxSpeed.x);\n        particle.speedY = this.randomFloat(minSpeed.y, maxSpeed.y);\n        particle.speedZ = this.randomFloat(minSpeed.z, maxSpeed.z);\n        particle.speedRot = this.randomFloat(0, this.particleConfig.maxRotSpeed)\n        particle.boomSpeed = this.randomFloat(0.5, 1) * (this.particleConfig.maxUpdateFrameSpeed - this.particleConfig.minUpdateFrameSpeed) + this.particleConfig.minUpdateFrameSpeed\n        particle.psize = this.particleConfig.scale;\n        particle.targetFrame = Math.floor(this.randomFloat(0, this.particleConfig.particleFrameCount))\n        particle.pcolor = {\n            x: this.randomFloat(colorStart.x, colorEnd.x),\n            y: this.randomFloat(colorStart.y, colorEnd.y),\n            z: this.randomFloat(colorStart.z, colorEnd.z),\n            w: this.randomFloat(colorStart.w, colorEnd.w)\n        }\n    }\n    randomFloat(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    updateParticles(){\n        let i = 0\n        let particle\n        for ( i = 0; i < this.particleConfig['number']; i++) {\n            particle = this.particles[i]\n            this.resetParticle(particle)\n        }\n    }\n\n    clearPartices () {\n        this.scene.remove(this.particleContainer)\n        this.particles = []\n    }\n\n    initGUI () {\n        let myjson = {}\n        this.config = new FizzyText();\n        this.gui = new dat.GUI({ autoPlace: false, load: myjson });\n        (this.gameArea.parentElement as HTMLElement).appendChild(this.gui.domElement)\n        this.gui.domElement.style.cssText = 'position: absolute; left: 0; top: 0; margin-left: 600px';\n        let folder1 = this.gui.addFolder( '最小位置' );\n        folder1.add(this.particleConfig.minPos, 'x').onChange(()=>{\n            this.updateParticles()\n        });\n        folder1.add(this.particleConfig.minPos, 'y').onChange(()=>{\n            this.updateParticles()\n        });\n        folder1.add(this.particleConfig.minPos, 'z').onChange(()=>{\n            this.updateParticles()\n        });\n        let folder2 = this.gui.addFolder( '最大位置' );\n        folder2.add(this.particleConfig.maxPos, 'x').onChange(()=>{\n            this.updateParticles()\n        });\n        folder2.add(this.particleConfig.maxPos, 'y').onChange(()=>{\n            this.updateParticles()\n        });\n        folder2.add(this.particleConfig.maxPos, 'z').onChange(()=>{\n            this.updateParticles()\n        });\n        let folder3 = this.gui.addFolder( '最小速度' );\n        folder3.add(this.particleConfig.minSpeed, 'x').onChange(()=>{\n            this.updateParticles()\n        });\n        folder3.add(this.particleConfig.minSpeed, 'y').onChange(()=>{\n            this.updateParticles()\n        });\n        folder3.add(this.particleConfig.minSpeed, 'z').onChange(()=>{\n            this.updateParticles()\n        });\n        let folder4 = this.gui.addFolder( '最大速度' );\n        folder4.add(this.particleConfig.maxSpeed, 'x').onChange(()=>{\n            this.updateParticles()\n        });\n        folder4.add(this.particleConfig.maxSpeed, 'y').onChange(()=>{\n            this.updateParticles()\n        });\n        folder4.add(this.particleConfig.maxSpeed, 'z').onChange(()=>{\n            this.updateParticles()\n        });\n        let folder5 = this.gui.addFolder( '颜色范围' );\n        folder5.addColor(this.colorPar, 'colorStart').onFinishChange(()=>{\n            this.particleConfig.colorStart.x = this.colorPar.colorStart.r/255;\n            this.particleConfig.colorStart.y = this.colorPar.colorStart.g/255;\n            this.particleConfig.colorStart.z = this.colorPar.colorStart.b/255;\n            this.clearPartices()\n            this.initParticle()\n        });\n        folder5.add(this.colorPar, 'startAlpha', 0, 1).step(0.01).onFinishChange(()=>{\n            this.particleConfig.colorStart.w = this.colorPar.startAlpha;\n            this.clearPartices()\n            this.initParticle()\n        });\n        folder5.addColor(this.colorPar, 'colorEnd').onFinishChange(()=>{\n            this.particleConfig.colorEnd.x = this.colorPar.colorEnd.r/255;\n            this.particleConfig.colorEnd.y = this.colorPar.colorEnd.g/255;\n            this.particleConfig.colorEnd.z = this.colorPar.colorEnd.b/255;\n            this.clearPartices()\n            this.initParticle()\n        });\n        folder5.add(this.colorPar, 'endAlpha', 0, 1).step(0.01).onFinishChange(()=>{\n            this.particleConfig.colorEnd.w = this.colorPar.endAlpha;\n            this.clearPartices()\n            this.initParticle()\n        });\n\n        let other = this.gui.addFolder( '其他' );\n        other.add(this.particleConfig, 'number').step(1).onChange(()=>{\n            // 跟新粒子数量\n            this.clearPartices()\n            this.initParticle()\n        });\n        other.add(this.particleConfig, 'scale').onChange(()=>{\n            this.updateParticles()\n        });\n        other.add(this.particleConfig, 'maxRotSpeed').onChange(()=>{\n            this.updateParticles()\n        });\n        other.add(this.particleConfig, 'isHaveLife').onChange(()=>{   \n        });\n        other.add(this.particleConfig, 'isNeedChangeDir').onChange(()=>{     \n        });\n        other.add(this.particleConfig, 'minUpdateFrameSpeed').onChange(()=>{\n            this.updateParticles()\n        });\n        other.add(this.particleConfig, 'maxUpdateFrameSpeed').onChange(()=>{\n            this.updateParticles()\n        });\n        other.add(this.particleConfig, 'frameCountPerRow').step(1).onChange(()=>{\n            // 更新材质\n            this.clearPartices()\n            this.initParticle()\n        });\n        other.add(this.particleConfig, 'particleFrameCount').step(1).onChange(()=>{\n            // 更新材质\n            this.clearPartices()\n            this.initParticle()\n        });\n\n        this.gui.remember(this.particleConfig)\n        this.gui.revert(this.gui)\n    }\n\n    initLight() {\n\n        this.ambLight = new THREE.AmbientLight(0xffffff);\n        this.scene.add( this.ambLight );\n\n        // this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\n        // this.dirLight.position.set(0.5, 1, 0.2);\n        // this.scene.add(this.dirLight);\n    }\n    clampFun (val, min, max) {\n        let cha = max-min\n        if(val < min){\n            val = (val-min)%(max-min) + max\n        }else if(val > max){\n            val = (val-max)%(max-min) + min\n        }\n        return val\n    }\n    \n    enterFrame () {\n        requestAnimationFrame(this.enterFrame.bind(this));\n\n        let time = Date.now() * 0.001\n        let intervalTime\n        let i = 0\n        let temp\n        let minPos = this.particleConfig.minPos\n        let maxPos = this.particleConfig.maxPos\n        let totalFrame =  this.particleConfig.particleFrameCount\n        let hasLife = this.particleConfig.isHaveLife\n        let needChangeDir = this.particleConfig.isNeedChangeDir\n        for(i = 0; i < this.particles.length; i++){\n            temp = this.particles[i]\n            intervalTime = time - temp.lastUpdateTime\n            if (intervalTime < temp.boomSpeed * 0.001) continue;\n            if ((temp.targetFrame+1) % totalFrame === 0){\n                if(hasLife){\n                    temp.px = this.randomFloat(minPos.x, maxPos.x);\n                    temp.py = this.randomFloat(minPos.y, maxPos.y);\n                    temp.pz = this.randomFloat(minPos.z, maxPos.z);\n\n                    let colorStart = this.particleConfig.colorStart\n                    let colorEnd = this.particleConfig.colorEnd\n                    temp.pcolor = {\n                        x: this.randomFloat(colorStart.x, colorEnd.x),\n                        y: this.randomFloat(colorStart.y, colorEnd.y),\n                        z: this.randomFloat(colorStart.z, colorEnd.z),\n                        w: this.randomFloat(colorStart.w, colorEnd.w)\n                    }\n                }\n                if(needChangeDir){\n                    let minSpeed = this.particleConfig.minSpeed\n                    let maxSpeed = this.particleConfig.maxSpeed\n                    temp.speedX = this.randomFloat(minSpeed.x, maxSpeed.x);\n                    temp.speedY = this.randomFloat(minSpeed.y, maxSpeed.y);\n                    temp.speedZ = this.randomFloat(minSpeed.z, maxSpeed.z);\n                }\n                temp.boomSpeed = this.randomFloat(0.5, 1) * (this.particleConfig.maxUpdateFrameSpeed - this.particleConfig.minUpdateFrameSpeed) + this.particleConfig.minUpdateFrameSpeed\n            }\n            temp.px += temp.speedX * intervalTime\n            temp.py += temp.speedY * intervalTime\n            temp.pz += temp.speedZ * intervalTime\n            temp.prot += temp.speedRot * intervalTime\n            \n            temp.px = this.clampFun(temp.px, minPos.x, maxPos.x)\n            temp.py = this.clampFun(temp.py, minPos.y, maxPos.y)\n            temp.pz = this.clampFun(temp.pz, minPos.z, maxPos.z)\n            temp.prot = this.clampFun(temp.prot, 0, Math.PI * 2)\n\n            temp.targetFrame++\n            temp.lastUpdateTime = time\n        }\n\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera )\n        this.stats.update();\n    }\n}\n\nexport default App\n\nclass FizzyText {\n    public width:number = 1;\n    public heigth:number = 1;\n    public depth:number = 1;\n    public color = 0x00ffff;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/particle_sprite/main.ts","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/DeviceOrientationControls.js\n// module id = 31\n// module chunks = 0 1 2 3","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/OrbitControls.js\n// module id = 32\n// module chunks = 0 1 2 3","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/libs/stats.min.js\n// module id = 33\n// module chunks = 0 1 2 3","module.exports = __webpack_public_path__ + \"static/img/fireworks1.9e47b01.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/fireworks1.png\n// module id = 35\n// module chunks = 0 1","import * as THREE from 'three'\n\nclass Particle extends THREE.Mesh{\n\n    public speedX: number = 0\n    public speedY: number = 0\n    public speedZ: number = 0\n    public speedRot: number = 0\n    public boomSpeed: number = 0\n    public lastUpdateTime: number = 0\n    \n    private uniforms: any\n    \n    get px():number {\n        return this.position.x;\n    }\n    set px(val:number) {\n        this.position.x = val;\n    }\n    get py():number {\n        return this.position.y;\n    }\n    set py(val:number) {\n        this.position.y = val;\n    }\n    get pz():number {\n        return this.position.z;\n    }\n    set pz(val:number) {\n        this.position.z = val;\n    }\n    get psize():number {\n        return (this.material as THREE.ShaderMaterial).uniforms.scale.value.x;\n    }\n    set psize(val:number) {\n        (this.material as THREE.ShaderMaterial).uniforms.scale.value = new THREE.Vector3(val, val, val)\n    }\n    get prot():number {\n        return (this.material as THREE.ShaderMaterial).uniforms.rotation.value\n    }\n    set prot(val:number) {\n        (this.material as THREE.ShaderMaterial).uniforms.rotation.value = val\n    }\n    // 当前帧\n    get targetFrame():number {\n        return (this.material as THREE.ShaderMaterial).uniforms.frame.value\n    }\n    set targetFrame(val:number) {\n        (this.material as THREE.ShaderMaterial).uniforms.frame.value = val\n    }\n    get pcolor():any {\n        // return (this.material as THREE.ShaderMaterial).uniforms.frame.value\n        let col = (this.material as THREE.ShaderMaterial).uniforms.mcolor.value\n        return {\n            x:col.x,\n            y:col.y,\n            z:col.z,\n            w:col.w\n        }\n    }\n    set pcolor(val:any) {\n        let color = new THREE.Vector4(val.x, val.y, val.z, val.w);\n        (this.material as THREE.ShaderMaterial).uniforms.mcolor.value = color\n    }\n\n    constructor(material){\n        super(new THREE.PlaneGeometry(1, 1), material)\n    }\n}\n\nexport default Particle\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/particle_sprite/Particle.ts"],"sourceRoot":""}