{"version":3,"sources":["webpack:///static/js/0.db2c2a079d66719fa8c2.js","webpack:///./src/pages/game/3dWorld/main.ts","webpack:///./~/three/examples/js/controls/DeviceOrientationControls.js","webpack:///./~/three/examples/js/controls/OrbitControls.js","webpack:///./~/three/examples/js/libs/stats.min.js"],"names":["webpackJsonp","22","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_three__","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__","n","__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default","__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__","__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__","__WEBPACK_IMPORTED_MODULE_4_dat_gui__","__WEBPACK_IMPORTED_MODULE_4_dat_gui___default","console","log","a","App","this","renderer","antialias","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","stats","gameArea","document","querySelector","appendChild","domElement","dom","scene","camera","position","z","controls","initGUI","initLight","initObject","enterFrame","prototype","_this","text","FizzyText","gui","GUI","autoPlace","parentElement","style","cssText","folder1","addFolder","add","step","onChange","box","scale","x","width","y","heigth","depth","addColor","material","color","ambLight","boxGeo","boxMat","set","requestAnimationFrame","bind","update","render","NUM","SCREEN_WIDTH","documentElement","clientWidth","SCREEN_HEIGHT","clientHeight","31","exports","THREE","DeviceOrientationControls","object","scope","rotation","reorder","enabled","deviceOrientation","screenOrientation","alpha","alphaOffsetAngle","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","zee","Vector3","euler","Euler","q0","Quaternion","q1","Math","sqrt","quaternion","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","addEventListener","disconnect","removeEventListener","degToRad","updateAlphaOffsetAngle","angle","dispose","32","OrbitControls","getAutoRotationAngle","PI","autoRotateSpeed","getZoomScale","pow","zoomSpeed","rotateLeft","sphericalDelta","theta","rotateUp","phi","dollyIn","dollyScale","PerspectiveCamera","OrthographicCamera","zoom","max","minZoom","min","maxZoom","updateProjectionMatrix","zoomChanged","warn","enableZoom","dollyOut","handleMouseDownRotate","rotateStart","clientX","clientY","handleMouseDownDolly","dollyStart","handleMouseDownPan","panStart","handleMouseMoveRotate","rotateEnd","rotateDelta","subVectors","element","body","rotateSpeed","copy","handleMouseMoveDolly","dollyEnd","dollyDelta","handleMouseMovePan","panEnd","panDelta","pan","handleMouseUp","handleMouseWheel","deltaY","handleKeyDown","keyCode","keys","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDolly","dx","dy","distance","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleTouchEnd","onMouseDown","preventDefault","button","mouseButtons","ORBIT","enableRotate","state","STATE","ROTATE","ZOOM","DOLLY","PAN","enablePan","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","endEvent","onMouseWheel","stopPropagation","onKeyDown","enableKeys","onTouchStart","length","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","onTouchMove","onTouchEnd","onContextMenu","undefined","target","minDistance","maxDistance","Infinity","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","autoRotate","MOUSE","MIDDLE","target0","clone","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","reset","changeEvent","offset","quat","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","makeSafe","radius","panOffset","setFromSpherical","lookAt","distanceToSquared","EPS","dot","type","Spherical","Vector2","panLeft","v","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","deltaX","targetDistance","tan","fov","matrix","right","left","top","bottom","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","33","Stats","h","c","k","d","children","display","l","createElement","g","performance","Date","now","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","end","usedJSHeapSize","jsHeapSizeLimit","setMode","round","u","m","p","q","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","drawImage"],"mappings":"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","file":"static/js/0.db2c2a079d66719fa8c2.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 22:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_three_examples_js_controls_OrbitControls__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_three_examples_js_controls_DeviceOrientationControls__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_dat_gui__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_dat_gui___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_dat_gui__);\n\r\n\r\n\r\n\r\n\r\nconsole.log(__WEBPACK_IMPORTED_MODULE_4_dat_gui___default.a);\r\nvar App = (function () {\r\n    function App() {\r\n        this.renderer = new __WEBPACK_IMPORTED_MODULE_0_three__[\"WebGLRenderer\"]({ antialias: true });\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.stats = new __WEBPACK_IMPORTED_MODULE_1_three_examples_js_libs_stats_min___default.a();\r\n        this.gameArea = document.querySelector('.game-area');\r\n        if (this.gameArea) {\r\n            this.gameArea.appendChild(this.renderer.domElement);\r\n            this.gameArea.appendChild(this.stats.dom);\r\n        }\r\n        this.scene = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Scene\"]();\r\n        this.camera = new __WEBPACK_IMPORTED_MODULE_0_three__[\"PerspectiveCamera\"](75, window.innerWidth / window.innerHeight, 1, 10000);\r\n        this.camera.position.z = 10;\r\n        this.controls = new __WEBPACK_IMPORTED_MODULE_0_three__[\"OrbitControls\"](this.camera, this.gameArea);\r\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\r\n        this.initGUI();\r\n        this.initLight();\r\n        this.initObject();\r\n        this.enterFrame();\r\n    }\r\n    App.prototype.initGUI = function () {\r\n        var _this = this;\r\n        var text = new FizzyText();\r\n        this.gui = new __WEBPACK_IMPORTED_MODULE_4_dat_gui___default.a.GUI({ autoPlace: false });\r\n        this.gameArea.parentElement.appendChild(this.gui.domElement);\r\n        this.gui.domElement.style.cssText = 'position: absolute; right: 0; top: 0; margin-right: 10px';\r\n        var folder1 = this.gui.addFolder('大小');\r\n        folder1.add(text, 'width', 1, 10).step(.1).onChange(function () {\r\n            _this.box.scale.x = text.width;\r\n        });\r\n        folder1.add(text, 'heigth', 1, 10).onChange(function () {\r\n            _this.box.scale.y = text.heigth;\r\n        });\r\n        folder1.add(text, 'depth', 1, 10).onChange(function () {\r\n            _this.box.scale.z = text.depth;\r\n        });\r\n        var folder2 = this.gui.addFolder('颜色');\r\n        folder2.addColor(text, 'color').onChange(function () {\r\n            _this.box.material.color = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Color\"](text.color);\r\n        });\r\n    };\r\n    App.prototype.initLight = function () {\r\n        this.ambLight = new __WEBPACK_IMPORTED_MODULE_0_three__[\"AmbientLight\"](0xffffff);\r\n        this.scene.add(this.ambLight);\r\n        // this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        // this.dirLight.position.set(0.5, 1, 0.2);\r\n        // this.scene.add(this.dirLight);\r\n    };\r\n    App.prototype.initObject = function () {\r\n        var boxGeo = new __WEBPACK_IMPORTED_MODULE_0_three__[\"BoxGeometry\"](1, 1, 1);\r\n        var boxMat = new __WEBPACK_IMPORTED_MODULE_0_three__[\"MeshPhongMaterial\"]({ color: 0x00ffff });\r\n        this.box = new __WEBPACK_IMPORTED_MODULE_0_three__[\"Mesh\"](boxGeo, boxMat);\r\n        this.box.position.set(0, 0, 0);\r\n        this.scene.add(this.box);\r\n    };\r\n    App.prototype.enterFrame = function () {\r\n        requestAnimationFrame(this.enterFrame.bind(this));\r\n        this.controls.update();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.stats.update();\r\n    };\r\n    App.NUM = 20;\r\n    App.SCREEN_WIDTH = document.documentElement.clientWidth;\r\n    App.SCREEN_HEIGHT = document.documentElement.clientHeight;\r\n    return App;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\r\nvar FizzyText = (function () {\r\n    function FizzyText() {\r\n        this.width = 1;\r\n        this.heigth = 1;\r\n        this.depth = 1;\r\n        this.color = 0x00ffff;\r\n    }\r\n    return FizzyText;\r\n}());\r\n\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports) {\n\n/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports) {\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports) {\n\n// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.db2c2a079d66719fa8c2.js","import * as THREE from 'three'\nimport Stats from 'three/examples/js/libs/stats.min'\nimport 'three/examples/js/controls/OrbitControls'\nimport 'three/examples/js/controls/DeviceOrientationControls'\nimport dat from 'dat-gui'\nconsole.log(dat)\n\nclass App{\n    private static NUM = 20\n    private static SCREEN_WIDTH = document.documentElement.clientWidth\n    private static SCREEN_HEIGHT = document.documentElement.clientHeight\n\n    private gameArea: HTMLElement\n    private renderer: THREE.WebGLRenderer\n    private scene: THREE.Scene\n    private camera: THREE.PerspectiveCamera\n    private controls: THREE.OrbitControls | THREE.DeviceOrientationControls\n\n    private stats: Stats\n\n    private ambLight: THREE.AmbientLight\n    private dirLight: THREE.DirectionalLight\n    private box: THREE.Mesh\n    private gui: dat.GUI\n\n    constructor () {\n        this.renderer = new THREE.WebGLRenderer({antialias: true})\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.stats = new Stats();\n        this.gameArea = <HTMLElement>document.querySelector('.game-area')\n        if(this.gameArea) {\n            this.gameArea.appendChild(this.renderer.domElement)\n            this.gameArea.appendChild(this.stats.dom);\n        }\n        \n        this.scene = new THREE.Scene()\n\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.z = 10;\n        this.controls = new THREE.OrbitControls( this.camera, this.gameArea );\n        // this.controls = new THREE.DeviceOrientationControls( this.camera );\n\n        this.initGUI()\n        this.initLight()\n        this.initObject()\n        this.enterFrame()\n        \n    }\n\n    initGUI () {\n        let text = new FizzyText();\n        this.gui = new dat.GUI({ autoPlace: false });\n        (this.gameArea.parentElement as HTMLElement).appendChild(this.gui.domElement)\n        this.gui.domElement.style.cssText = 'position: absolute; right: 0; top: 0; margin-right: 10px';\n        let folder1 = this.gui.addFolder( '大小' );\n        folder1.add(text, 'width', 1, 10).step(.1).onChange(()=>{\n            this.box.scale.x = text.width\n        });\n        folder1.add(text, 'heigth', 1, 10).onChange(()=>{\n            this.box.scale.y = text.heigth\n        });\n        folder1.add(text, 'depth', 1, 10).onChange(()=>{\n            this.box.scale.z = text.depth\n        });\n        let folder2 = this.gui.addFolder( '颜色' );\n        folder2.addColor(text, 'color').onChange(()=>{\n            (this.box.material as THREE.MeshPhongMaterial).color = new THREE.Color(text.color)\n        });\n    }\n\n    initLight() {\n\n        this.ambLight = new THREE.AmbientLight(0xffffff);\n        this.scene.add( this.ambLight );\n\n        // this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\n        // this.dirLight.position.set(0.5, 1, 0.2);\n        // this.scene.add(this.dirLight);\n    }\n    \n    initObject () {\n        let boxGeo = new THREE.BoxGeometry(1, 1, 1)\n        let boxMat = new THREE.MeshPhongMaterial( { color: 0x00ffff } )\n        \n        this.box = new THREE.Mesh( boxGeo, boxMat )\n        this.box.position.set(0,0,0)\n        this.scene.add(this.box)\n    }\n\n    enterFrame () {\n        requestAnimationFrame(this.enterFrame.bind(this));\n\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera )\n        this.stats.update();\n    }\n}\n\nexport default App\n\nclass FizzyText {\n    public width:number = 1;\n    public heigth:number = 1;\n    public depth:number = 1;\n    public color = 0x00ffff;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/3dWorld/main.ts","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/DeviceOrientationControls.js\n// module id = 31\n// module chunks = 0","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/controls/OrbitControls.js\n// module id = 32\n// module chunks = 0","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/examples/js/libs/stats.min.js\n// module id = 33\n// module chunks = 0"],"sourceRoot":""}